/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.operations;

import static com.prove.proveapi.operations.Operations.RequestOperation;

import com.prove.proveapi.SDKConfiguration;
import com.prove.proveapi.operations.V3BatchGetIdentities;
import com.prove.proveapi.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;

public class V3BatchGetIdentitiesRequestBuilder {

    private Optional<String> clientRequestId = Optional.empty();
    private Optional<Long> limit = Optional.empty();
    private Optional<String> startKey = Optional.empty();
    private Optional<Boolean> showInactive = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public V3BatchGetIdentitiesRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public V3BatchGetIdentitiesRequestBuilder clientRequestId(String clientRequestId) {
        Utils.checkNotNull(clientRequestId, "clientRequestId");
        this.clientRequestId = Optional.of(clientRequestId);
        return this;
    }

    public V3BatchGetIdentitiesRequestBuilder clientRequestId(Optional<String> clientRequestId) {
        Utils.checkNotNull(clientRequestId, "clientRequestId");
        this.clientRequestId = clientRequestId;
        return this;
    }
                
    public V3BatchGetIdentitiesRequestBuilder limit(long limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = Optional.of(limit);
        return this;
    }

    public V3BatchGetIdentitiesRequestBuilder limit(Optional<Long> limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = limit;
        return this;
    }
                
    public V3BatchGetIdentitiesRequestBuilder startKey(String startKey) {
        Utils.checkNotNull(startKey, "startKey");
        this.startKey = Optional.of(startKey);
        return this;
    }

    public V3BatchGetIdentitiesRequestBuilder startKey(Optional<String> startKey) {
        Utils.checkNotNull(startKey, "startKey");
        this.startKey = startKey;
        return this;
    }
                
    public V3BatchGetIdentitiesRequestBuilder showInactive(boolean showInactive) {
        Utils.checkNotNull(showInactive, "showInactive");
        this.showInactive = Optional.of(showInactive);
        return this;
    }

    public V3BatchGetIdentitiesRequestBuilder showInactive(Optional<Boolean> showInactive) {
        Utils.checkNotNull(showInactive, "showInactive");
        this.showInactive = showInactive;
        return this;
    }


    private V3BatchGetIdentitiesRequest buildRequest() {

        V3BatchGetIdentitiesRequest request = new V3BatchGetIdentitiesRequest(clientRequestId,
            limit,
            startKey,
            showInactive);

        return request;
    }

    public V3BatchGetIdentitiesResponse call() throws Exception {
        
        RequestOperation<V3BatchGetIdentitiesRequest, V3BatchGetIdentitiesResponse> operation
              = new V3BatchGetIdentities.Sync(sdkConfiguration);
        V3BatchGetIdentitiesRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
