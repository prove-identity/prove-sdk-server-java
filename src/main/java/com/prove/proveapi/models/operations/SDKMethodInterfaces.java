/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.operations;

import com.prove.proveapi.models.components.V3ActivateIdentityRequest;
import com.prove.proveapi.models.components.V3BatchEnrollIdentitiesRequest;
import com.prove.proveapi.models.components.V3ChallengeRequest;
import com.prove.proveapi.models.components.V3CompleteRequest;
import com.prove.proveapi.models.components.V3EnrollIdentityRequest;
import com.prove.proveapi.models.components.V3IdentityDeactivateRequest;
import com.prove.proveapi.models.components.V3StartRequest;
import com.prove.proveapi.models.components.V3TokenRequest;
import com.prove.proveapi.models.components.V3UnifyBindRequest;
import com.prove.proveapi.models.components.V3UnifyRequest;
import com.prove.proveapi.models.components.V3UnifyStatusRequest;
import com.prove.proveapi.models.components.V3ValidateRequest;
import com.prove.proveapi.models.components.V3VerifyRequest;
import com.prove.proveapi.models.components.V3VerifyStatusRequest;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;

public class SDKMethodInterfaces {

    public interface MethodCallV3TokenRequest {
        V3TokenRequestResponse v3TokenRequest(
            Optional<? extends V3TokenRequest> request) throws Exception;
    }

    public interface MethodCallV3ChallengeRequest {
        V3ChallengeRequestResponse v3ChallengeRequest(
            Optional<? extends V3ChallengeRequest> request) throws Exception;
    }

    public interface MethodCallV3CompleteRequest {
        V3CompleteRequestResponse v3CompleteRequest(
            Optional<? extends V3CompleteRequest> request) throws Exception;
    }

    public interface MethodCallV3StartRequest {
        V3StartRequestResponse v3StartRequest(
            Optional<? extends V3StartRequest> request) throws Exception;
    }

    public interface MethodCallV3UnifyRequest {
        V3UnifyRequestResponse v3UnifyRequest(
            Optional<? extends V3UnifyRequest> request) throws Exception;
    }

    public interface MethodCallV3UnifyBindRequest {
        V3UnifyBindRequestResponse v3UnifyBindRequest(
            Optional<? extends V3UnifyBindRequest> request) throws Exception;
    }

    public interface MethodCallV3UnifyStatusRequest {
        V3UnifyStatusRequestResponse v3UnifyStatusRequest(
            Optional<? extends V3UnifyStatusRequest> request) throws Exception;
    }

    public interface MethodCallV3ValidateRequest {
        V3ValidateRequestResponse v3ValidateRequest(
            Optional<? extends V3ValidateRequest> request) throws Exception;
    }

    public interface MethodCallV3VerifyRequest {
        V3VerifyRequestResponse v3VerifyRequest(
            Optional<? extends V3VerifyRequest> request) throws Exception;
    }

    public interface MethodCallV3VerifyStatusRequest {
        V3VerifyStatusRequestResponse v3VerifyStatusRequest(
            Optional<? extends V3VerifyStatusRequest> request) throws Exception;
    }

    public interface MethodCallV3BatchGetIdentities {
        V3BatchGetIdentitiesResponse v3BatchGetIdentities(
            Optional<String> clientRequestId,
            Optional<Long> limit,
            Optional<String> startKey,
            Optional<Boolean> showInactive) throws Exception;
    }

    public interface MethodCallV3EnrollIdentity {
        V3EnrollIdentityResponse v3EnrollIdentity(
            Optional<? extends V3EnrollIdentityRequest> request) throws Exception;
    }

    public interface MethodCallV3BatchEnrollIdentities {
        V3BatchEnrollIdentitiesResponse v3BatchEnrollIdentities(
            Optional<? extends V3BatchEnrollIdentitiesRequest> request) throws Exception;
    }

    public interface MethodCallV3DisenrollIdentity {
        V3DisenrollIdentityResponse v3DisenrollIdentity(
            String identityId,
            Optional<String> clientRequestId) throws Exception;
    }

    public interface MethodCallV3GetIdentity {
        V3GetIdentityResponse v3GetIdentity(
            String identityId,
            Optional<String> clientRequestId) throws Exception;
    }

    public interface MethodCallV3ActivateIdentity {
        V3ActivateIdentityResponse v3ActivateIdentity(
            String identityId,
            Optional<? extends V3ActivateIdentityRequest> v3ActivateIdentityRequest) throws Exception;
    }

    public interface MethodCallV3DeactivateIdentity {
        V3DeactivateIdentityResponse v3DeactivateIdentity(
            String identityId,
            Optional<? extends V3IdentityDeactivateRequest> v3IdentityDeactivateRequest) throws Exception;
    }

    public interface MethodCallV3GetIdentitiesByPhoneNumber {
        V3GetIdentitiesByPhoneNumberResponse v3GetIdentitiesByPhoneNumber(
            String mobileNumber,
            Optional<String> clientRequestId) throws Exception;
    }
}
