/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.operations;

import static com.prove.proveapi.operations.Operations.RequestOperation;

import com.prove.proveapi.SDKConfiguration;
import com.prove.proveapi.models.components.V3CrossDomainIdentityRequest;
import com.prove.proveapi.operations.V3CrossDomainIdentity;
import com.prove.proveapi.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class V3CrossDomainIdentityRequestBuilder {

    private String identityId;
    private Optional<? extends V3CrossDomainIdentityRequest> v3CrossDomainIdentityRequest = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public V3CrossDomainIdentityRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public V3CrossDomainIdentityRequestBuilder identityId(String identityId) {
        Utils.checkNotNull(identityId, "identityId");
        this.identityId = identityId;
        return this;
    }
                
    public V3CrossDomainIdentityRequestBuilder v3CrossDomainIdentityRequest(V3CrossDomainIdentityRequest v3CrossDomainIdentityRequest) {
        Utils.checkNotNull(v3CrossDomainIdentityRequest, "v3CrossDomainIdentityRequest");
        this.v3CrossDomainIdentityRequest = Optional.of(v3CrossDomainIdentityRequest);
        return this;
    }

    public V3CrossDomainIdentityRequestBuilder v3CrossDomainIdentityRequest(Optional<? extends V3CrossDomainIdentityRequest> v3CrossDomainIdentityRequest) {
        Utils.checkNotNull(v3CrossDomainIdentityRequest, "v3CrossDomainIdentityRequest");
        this.v3CrossDomainIdentityRequest = v3CrossDomainIdentityRequest;
        return this;
    }


    private com.prove.proveapi.models.operations.V3CrossDomainIdentityRequest buildRequest() {

        com.prove.proveapi.models.operations.V3CrossDomainIdentityRequest request = new com.prove.proveapi.models.operations.V3CrossDomainIdentityRequest(identityId,
            v3CrossDomainIdentityRequest);

        return request;
    }

    public V3CrossDomainIdentityResponse call() throws Exception {
        
        RequestOperation<com.prove.proveapi.models.operations.V3CrossDomainIdentityRequest, V3CrossDomainIdentityResponse> operation
              = new V3CrossDomainIdentity.Sync(sdkConfiguration);
        com.prove.proveapi.models.operations.V3CrossDomainIdentityRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
