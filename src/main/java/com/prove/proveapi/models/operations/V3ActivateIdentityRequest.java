/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.prove.proveapi.utils.SpeakeasyMetadata;
import com.prove.proveapi.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class V3ActivateIdentityRequest {
    /**
     * A Prove-generated unique ID for a specific identity.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=identityId")
    private String identityId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest;

    @JsonCreator
    public V3ActivateIdentityRequest(
            String identityId,
            Optional<? extends com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest) {
        Utils.checkNotNull(identityId, "identityId");
        Utils.checkNotNull(v3ActivateIdentityRequest, "v3ActivateIdentityRequest");
        this.identityId = identityId;
        this.v3ActivateIdentityRequest = v3ActivateIdentityRequest;
    }
    
    public V3ActivateIdentityRequest(
            String identityId) {
        this(identityId, Optional.empty());
    }

    /**
     * A Prove-generated unique ID for a specific identity.
     */
    @JsonIgnore
    public String identityId() {
        return identityId;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest() {
        return (Optional<com.prove.proveapi.models.components.V3ActivateIdentityRequest>) v3ActivateIdentityRequest;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A Prove-generated unique ID for a specific identity.
     */
    public V3ActivateIdentityRequest withIdentityId(String identityId) {
        Utils.checkNotNull(identityId, "identityId");
        this.identityId = identityId;
        return this;
    }

    public V3ActivateIdentityRequest withV3ActivateIdentityRequest(com.prove.proveapi.models.components.V3ActivateIdentityRequest v3ActivateIdentityRequest) {
        Utils.checkNotNull(v3ActivateIdentityRequest, "v3ActivateIdentityRequest");
        this.v3ActivateIdentityRequest = Optional.ofNullable(v3ActivateIdentityRequest);
        return this;
    }


    public V3ActivateIdentityRequest withV3ActivateIdentityRequest(Optional<? extends com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest) {
        Utils.checkNotNull(v3ActivateIdentityRequest, "v3ActivateIdentityRequest");
        this.v3ActivateIdentityRequest = v3ActivateIdentityRequest;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3ActivateIdentityRequest other = (V3ActivateIdentityRequest) o;
        return 
            Utils.enhancedDeepEquals(this.identityId, other.identityId) &&
            Utils.enhancedDeepEquals(this.v3ActivateIdentityRequest, other.v3ActivateIdentityRequest);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            identityId, v3ActivateIdentityRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3ActivateIdentityRequest.class,
                "identityId", identityId,
                "v3ActivateIdentityRequest", v3ActivateIdentityRequest);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String identityId;

        private Optional<? extends com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * A Prove-generated unique ID for a specific identity.
         */
        public Builder identityId(String identityId) {
            Utils.checkNotNull(identityId, "identityId");
            this.identityId = identityId;
            return this;
        }


        public Builder v3ActivateIdentityRequest(com.prove.proveapi.models.components.V3ActivateIdentityRequest v3ActivateIdentityRequest) {
            Utils.checkNotNull(v3ActivateIdentityRequest, "v3ActivateIdentityRequest");
            this.v3ActivateIdentityRequest = Optional.ofNullable(v3ActivateIdentityRequest);
            return this;
        }

        public Builder v3ActivateIdentityRequest(Optional<? extends com.prove.proveapi.models.components.V3ActivateIdentityRequest> v3ActivateIdentityRequest) {
            Utils.checkNotNull(v3ActivateIdentityRequest, "v3ActivateIdentityRequest");
            this.v3ActivateIdentityRequest = v3ActivateIdentityRequest;
            return this;
        }

        public V3ActivateIdentityRequest build() {

            return new V3ActivateIdentityRequest(
                identityId, v3ActivateIdentityRequest);
        }

    }
}
