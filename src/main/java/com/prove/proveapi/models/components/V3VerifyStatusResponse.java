/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.prove.proveapi.models.components;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.prove.proveapi.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
/**
 * V3VerifyStatusResponse - Response body for the V3 Verify Status API
 */

public class V3VerifyStatusResponse {

    /**
     * Possession Result represents the result of the Possession check. Possible values are "success", "pending", "failed", and "not applicable".
     */
    @JsonProperty("possessionResult")
    private V3VerifyStatusResponsePossessionResult possessionResult;

    /**
     * Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
     */
    @JsonProperty("success")
    private V3VerifyStatusResponseSuccess success;

    /**
     * Verify Result represents the result of the Verify process. Possible values are "success", "pending", "failed", and "not applicable".
     */
    @JsonProperty("verifyResult")
    private V3VerifyStatusResponseVerifyResult verifyResult;

    @JsonCreator
    public V3VerifyStatusResponse(
            @JsonProperty("possessionResult") V3VerifyStatusResponsePossessionResult possessionResult,
            @JsonProperty("success") V3VerifyStatusResponseSuccess success,
            @JsonProperty("verifyResult") V3VerifyStatusResponseVerifyResult verifyResult) {
        Utils.checkNotNull(possessionResult, "possessionResult");
        Utils.checkNotNull(success, "success");
        Utils.checkNotNull(verifyResult, "verifyResult");
        this.possessionResult = possessionResult;
        this.success = success;
        this.verifyResult = verifyResult;
    }

    /**
     * Possession Result represents the result of the Possession check. Possible values are "success", "pending", "failed", and "not applicable".
     */
    @JsonIgnore
    public V3VerifyStatusResponsePossessionResult possessionResult() {
        return possessionResult;
    }

    /**
     * Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
     */
    @JsonIgnore
    public V3VerifyStatusResponseSuccess success() {
        return success;
    }

    /**
     * Verify Result represents the result of the Verify process. Possible values are "success", "pending", "failed", and "not applicable".
     */
    @JsonIgnore
    public V3VerifyStatusResponseVerifyResult verifyResult() {
        return verifyResult;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Possession Result represents the result of the Possession check. Possible values are "success", "pending", "failed", and "not applicable".
     */
    public V3VerifyStatusResponse withPossessionResult(V3VerifyStatusResponsePossessionResult possessionResult) {
        Utils.checkNotNull(possessionResult, "possessionResult");
        this.possessionResult = possessionResult;
        return this;
    }

    /**
     * Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
     */
    public V3VerifyStatusResponse withSuccess(V3VerifyStatusResponseSuccess success) {
        Utils.checkNotNull(success, "success");
        this.success = success;
        return this;
    }

    /**
     * Verify Result represents the result of the Verify process. Possible values are "success", "pending", "failed", and "not applicable".
     */
    public V3VerifyStatusResponse withVerifyResult(V3VerifyStatusResponseVerifyResult verifyResult) {
        Utils.checkNotNull(verifyResult, "verifyResult");
        this.verifyResult = verifyResult;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3VerifyStatusResponse other = (V3VerifyStatusResponse) o;
        return 
            Objects.deepEquals(this.possessionResult, other.possessionResult) &&
            Objects.deepEquals(this.success, other.success) &&
            Objects.deepEquals(this.verifyResult, other.verifyResult);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            possessionResult,
            success,
            verifyResult);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3VerifyStatusResponse.class,
                "possessionResult", possessionResult,
                "success", success,
                "verifyResult", verifyResult);
    }
    
    public final static class Builder {
 
        private V3VerifyStatusResponsePossessionResult possessionResult;
 
        private V3VerifyStatusResponseSuccess success;
 
        private V3VerifyStatusResponseVerifyResult verifyResult;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Possession Result represents the result of the Possession check. Possible values are "success", "pending", "failed", and "not applicable".
         */
        public Builder possessionResult(V3VerifyStatusResponsePossessionResult possessionResult) {
            Utils.checkNotNull(possessionResult, "possessionResult");
            this.possessionResult = possessionResult;
            return this;
        }

        /**
         * Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
         */
        public Builder success(V3VerifyStatusResponseSuccess success) {
            Utils.checkNotNull(success, "success");
            this.success = success;
            return this;
        }

        /**
         * Verify Result represents the result of the Verify process. Possible values are "success", "pending", "failed", and "not applicable".
         */
        public Builder verifyResult(V3VerifyStatusResponseVerifyResult verifyResult) {
            Utils.checkNotNull(verifyResult, "verifyResult");
            this.verifyResult = verifyResult;
            return this;
        }
        
        public V3VerifyStatusResponse build() {
            return new V3VerifyStatusResponse(
                possessionResult,
                success,
                verifyResult);
        }
    }
}

