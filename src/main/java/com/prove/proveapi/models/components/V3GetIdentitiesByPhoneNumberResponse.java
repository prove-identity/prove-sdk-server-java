/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.prove.proveapi.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

/**
 * V3GetIdentitiesByPhoneNumberResponse
 * 
 * <p>Response body for the V3 Get Identities By Phone Number API.
 */
public class V3GetIdentitiesByPhoneNumberResponse {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    private Optional<? extends List<LookupIdentityItem>> items;

    @JsonCreator
    public V3GetIdentitiesByPhoneNumberResponse(
            @JsonProperty("items") Optional<? extends List<LookupIdentityItem>> items) {
        Utils.checkNotNull(items, "items");
        this.items = items;
    }
    
    public V3GetIdentitiesByPhoneNumberResponse() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<LookupIdentityItem>> items() {
        return (Optional<List<LookupIdentityItem>>) items;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public V3GetIdentitiesByPhoneNumberResponse withItems(List<LookupIdentityItem> items) {
        Utils.checkNotNull(items, "items");
        this.items = Optional.ofNullable(items);
        return this;
    }

    public V3GetIdentitiesByPhoneNumberResponse withItems(Optional<? extends List<LookupIdentityItem>> items) {
        Utils.checkNotNull(items, "items");
        this.items = items;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3GetIdentitiesByPhoneNumberResponse other = (V3GetIdentitiesByPhoneNumberResponse) o;
        return 
            Objects.deepEquals(this.items, other.items);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            items);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3GetIdentitiesByPhoneNumberResponse.class,
                "items", items);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<LookupIdentityItem>> items = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder items(List<LookupIdentityItem> items) {
            Utils.checkNotNull(items, "items");
            this.items = Optional.ofNullable(items);
            return this;
        }

        public Builder items(Optional<? extends List<LookupIdentityItem>> items) {
            Utils.checkNotNull(items, "items");
            this.items = items;
            return this;
        }
        
        public V3GetIdentitiesByPhoneNumberResponse build() {
            return new V3GetIdentitiesByPhoneNumberResponse(
                items);
        }
    }
}
