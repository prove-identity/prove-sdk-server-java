/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.prove.proveapi.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;

/**
 * V3CrossDomainIdentityResponse
 * 
 * <p>Response body for the V3 Identity Cross Domain API.
 */
public class V3CrossDomainIdentityResponse {
    /**
     * The number of items in the Identities array.
     */
    @JsonProperty("count")
    private long count;

    /**
     * The list of identities from other linked accounts.
     */
    @JsonProperty("identites")
    private List<IdentityItem> identites;

    @JsonCreator
    public V3CrossDomainIdentityResponse(
            @JsonProperty("count") long count,
            @JsonProperty("identites") List<IdentityItem> identites) {
        Utils.checkNotNull(count, "count");
        Utils.checkNotNull(identites, "identites");
        this.count = count;
        this.identites = identites;
    }

    /**
     * The number of items in the Identities array.
     */
    @JsonIgnore
    public long count() {
        return count;
    }

    /**
     * The list of identities from other linked accounts.
     */
    @JsonIgnore
    public List<IdentityItem> identites() {
        return identites;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The number of items in the Identities array.
     */
    public V3CrossDomainIdentityResponse withCount(long count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }

    /**
     * The list of identities from other linked accounts.
     */
    public V3CrossDomainIdentityResponse withIdentites(List<IdentityItem> identites) {
        Utils.checkNotNull(identites, "identites");
        this.identites = identites;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3CrossDomainIdentityResponse other = (V3CrossDomainIdentityResponse) o;
        return 
            Utils.enhancedDeepEquals(this.count, other.count) &&
            Utils.enhancedDeepEquals(this.identites, other.identites);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            count, identites);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3CrossDomainIdentityResponse.class,
                "count", count,
                "identites", identites);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Long count;

        private List<IdentityItem> identites;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The number of items in the Identities array.
         */
        public Builder count(long count) {
            Utils.checkNotNull(count, "count");
            this.count = count;
            return this;
        }


        /**
         * The list of identities from other linked accounts.
         */
        public Builder identites(List<IdentityItem> identites) {
            Utils.checkNotNull(identites, "identites");
            this.identites = identites;
            return this;
        }

        public V3CrossDomainIdentityResponse build() {

            return new V3CrossDomainIdentityResponse(
                count, identites);
        }

    }
}
