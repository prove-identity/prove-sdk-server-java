/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.prove.proveapi.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

/**
 * V3ActivateIdentityResponse
 * 
 * <p>Response body for the V3 Activate Identity API.
 */
public class V3ActivateIdentityResponse {

    /**
     * If true, the activate operation was successful.
     */
    @JsonProperty("success")
    private boolean success;

    @JsonCreator
    public V3ActivateIdentityResponse(
            @JsonProperty("success") boolean success) {
        Utils.checkNotNull(success, "success");
        this.success = success;
    }

    /**
     * If true, the activate operation was successful.
     */
    @JsonIgnore
    public boolean success() {
        return success;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * If true, the activate operation was successful.
     */
    public V3ActivateIdentityResponse withSuccess(boolean success) {
        Utils.checkNotNull(success, "success");
        this.success = success;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3ActivateIdentityResponse other = (V3ActivateIdentityResponse) o;
        return 
            Objects.deepEquals(this.success, other.success);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            success);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3ActivateIdentityResponse.class,
                "success", success);
    }
    
    public final static class Builder {
 
        private Boolean success;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * If true, the activate operation was successful.
         */
        public Builder success(boolean success) {
            Utils.checkNotNull(success, "success");
            this.success = success;
            return this;
        }
        
        public V3ActivateIdentityResponse build() {
            return new V3ActivateIdentityResponse(
                success);
        }
    }
}
