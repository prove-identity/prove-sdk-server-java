/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.prove.proveapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.prove.proveapi.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * V3ActivateIdentityRequest
 * 
 * <p>Request body for the V3 Activate Identity API.
 */
public class V3ActivateIdentityRequest {
    /**
     * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientRequestId")
    private Optional<String> clientRequestId;

    @JsonCreator
    public V3ActivateIdentityRequest(
            @JsonProperty("clientRequestId") Optional<String> clientRequestId) {
        Utils.checkNotNull(clientRequestId, "clientRequestId");
        this.clientRequestId = clientRequestId;
    }
    
    public V3ActivateIdentityRequest() {
        this(Optional.empty());
    }

    /**
     * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
     */
    @JsonIgnore
    public Optional<String> clientRequestId() {
        return clientRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
     */
    public V3ActivateIdentityRequest withClientRequestId(String clientRequestId) {
        Utils.checkNotNull(clientRequestId, "clientRequestId");
        this.clientRequestId = Optional.ofNullable(clientRequestId);
        return this;
    }


    /**
     * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
     */
    public V3ActivateIdentityRequest withClientRequestId(Optional<String> clientRequestId) {
        Utils.checkNotNull(clientRequestId, "clientRequestId");
        this.clientRequestId = clientRequestId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3ActivateIdentityRequest other = (V3ActivateIdentityRequest) o;
        return 
            Utils.enhancedDeepEquals(this.clientRequestId, other.clientRequestId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            clientRequestId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3ActivateIdentityRequest.class,
                "clientRequestId", clientRequestId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> clientRequestId = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
         */
        public Builder clientRequestId(String clientRequestId) {
            Utils.checkNotNull(clientRequestId, "clientRequestId");
            this.clientRequestId = Optional.ofNullable(clientRequestId);
            return this;
        }

        /**
         * A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
         */
        public Builder clientRequestId(Optional<String> clientRequestId) {
            Utils.checkNotNull(clientRequestId, "clientRequestId");
            this.clientRequestId = clientRequestId;
            return this;
        }

        public V3ActivateIdentityRequest build() {

            return new V3ActivateIdentityRequest(
                clientRequestId);
        }

    }
}
